/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package database;
import java.sql.*;
import java.util.Vector;
import javax.swing.event.*;


/**
 *
 * @author Ramchandra Patil
 */
public class UserInterface extends javax.swing.JFrame {
    
    // https://stackoverflow.com/a/27276523
    // the single DB connection...
    String dbname = "jdbc:mysql://localhost:3306/hospital_management_system?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC",
    username = "root",
    password = "";

    /**
     * Creates new form UserInterface
     */
    public UserInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel16 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        PatientPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        opd_sho_jTextField = new javax.swing.JTextField();
        opd_name_jTextField = new javax.swing.JTextField();
        opd_address_jTextField = new javax.swing.JTextField();
        opd_contact_jTextField = new javax.swing.JTextField();
        opd_reason_regis_jTextField = new javax.swing.JTextField();
        opd_doc_id_jTextField = new javax.swing.JTextField();
        opd_age_jTextField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        opd_gender_jComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        OPDTable = new javax.swing.JTable();
        opd_submit_jButton = new javax.swing.JButton();
        opd_del_jButton = new javax.swing.JButton();
        opd_update_jButton = new javax.swing.JButton();
        DoctorPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DoctorTable = new javax.swing.JTable();
        doctor_id = new javax.swing.JLabel();
        doc_id_jTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        doc_name_jTextField = new javax.swing.JTextField();
        doc_assistant_name_jTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        doc_spec_jTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        doc_time_jComboBox = new javax.swing.JComboBox<>();
        doc_submit_jButton = new javax.swing.JButton();
        doc_del_jButton = new javax.swing.JButton();
        doc_contact_jTextField = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        doc_update_jButton = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        OPDPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        pat_name_jTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        pat_no_jTextField = new javax.swing.JTextField();
        pat_blood_group_jTextField = new javax.swing.JTextField();
        pat_contact_jTextField = new javax.swing.JTextField();
        pat_emerg_contact_jTextField = new javax.swing.JTextField();
        pat_med_treatment_jTextField = new javax.swing.JTextField();
        pat_doc_id_jTextField = new javax.swing.JTextField();
        pat_gender_jComboBox = new javax.swing.JComboBox<>();
        pat_submit_jButton = new javax.swing.JButton();
        pat_update_jButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PatientTable = new javax.swing.JTable();
        pat_del_jButton = new javax.swing.JButton();
        pat_emerg_person_jTextField = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setBackground(java.awt.SystemColor.activeCaption);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database/42491-hospital-icon.png"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Dutch801 Rm BT", 1, 48)); // NOI18N
        jLabel15.setText("KPRP HOSPITAL");
        jLabel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jScrollPane5.setViewportView(jTextPane1);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("KPRP hospital, always at your service.");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("Contact No. :+832456765");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1206, 1206, 1206)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel25))))
                .addContainerGap(1789, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addGap(73, 73, 73))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(66, 66, 66)))
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("About", jPanel3);

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel18.setText("OPD Entry");

        opd_sho_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opd_sho_jTextFieldActionPerformed(evt);
            }
        });

        opd_name_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opd_name_jTextFieldActionPerformed(evt);
            }
        });

        opd_contact_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opd_contact_jTextFieldActionPerformed(evt);
            }
        });

        opd_doc_id_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opd_doc_id_jTextFieldActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setText("SHO:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("Name:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setText("Address:");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setText("Contact No:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel23.setText("Reason for registration:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel24.setText("Doctor Id:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel26.setText("Age:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel27.setText("Gender:");

        opd_gender_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male", "Rather not say" }));

        OPDTable.setModel(fetchOPDTableData(OPDTable, true));
        getSelectedRow(OPDTable, OPDData, "OPD");
        jScrollPane3.setViewportView(OPDTable);

        opd_submit_jButton.setText("SUBMIT");
        opd_submit_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opd_submit_jButtonActionPerformed(evt);
            }
        });

        opd_del_jButton.setText("DELETE");
        opd_del_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opd_del_jButtonActionPerformed(evt);
            }
        });

        opd_update_jButton.setText("UPDATE");
        opd_update_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opd_update_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientPanelLayout = new javax.swing.GroupLayout(PatientPanel);
        PatientPanel.setLayout(PatientPanelLayout);
        PatientPanelLayout.setHorizontalGroup(
            PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientPanelLayout.createSequentialGroup()
                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatientPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18))
                    .addGroup(PatientPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(opd_sho_jTextField)
                            .addComponent(opd_name_jTextField)
                            .addComponent(opd_address_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(opd_contact_jTextField)))
                    .addGroup(PatientPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PatientPanelLayout.createSequentialGroup()
                                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel27))
                                .addGap(18, 18, 18)
                                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(opd_age_jTextField)
                                    .addComponent(opd_gender_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PatientPanelLayout.createSequentialGroup()
                                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel23))
                                .addGap(18, 18, 18)
                                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(opd_reason_regis_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(opd_doc_id_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(PatientPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(opd_submit_jButton)
                        .addGap(18, 18, 18)
                        .addComponent(opd_update_jButton)
                        .addGap(18, 18, 18)
                        .addComponent(opd_del_jButton)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PatientPanelLayout.setVerticalGroup(
            PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatientPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PatientPanelLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(opd_sho_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(opd_name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(opd_address_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(opd_contact_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(opd_reason_regis_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(opd_doc_id_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(opd_age_jTextField)
                            .addComponent(jLabel26))
                        .addGap(18, 18, 18)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(opd_gender_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addGap(40, 40, 40)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(opd_submit_jButton)
                            .addComponent(opd_del_jButton)
                            .addComponent(opd_update_jButton))))
                .addContainerGap())
        );

        jTabbedPane.addTab("OPD", PatientPanel);

        DoctorTable.setModel(fetchDocTableData(DoctorTable, true));
        getSelectedRow(DoctorTable, docData, "doctor");
        jScrollPane1.setViewportView(DoctorTable);

        doctor_id.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        doctor_id.setText("Doctor ID:");

        doc_id_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doc_id_jTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Assistant Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Specialisation:");

        doc_spec_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doc_spec_jTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Visiting Hours:");

        doc_time_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(
            new String[] {
                "09:00-13:00",
                "15:30-19:30",
                "20:00-21:30"
            }));
            doc_time_jComboBox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    doc_time_jComboBoxActionPerformed(evt);
                }
            });

            doc_submit_jButton.setText("SUBMIT");
            doc_submit_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    doc_submit_jButtonActionPerformed(evt);
                }
            });

            doc_del_jButton.setText("DELETE");
            doc_del_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    doc_del_jButtonActionPerformed(evt);
                }
            });

            jLabel28.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel28.setText("Contact No:");

            doc_update_jButton.setText("UPDATE");
            doc_update_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    doc_update_jButtonActionPerformed(evt);
                }
            });

            jLabel29.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
            jLabel29.setText("Doctor Entry");

            javax.swing.GroupLayout DoctorPanelLayout = new javax.swing.GroupLayout(DoctorPanel);
            DoctorPanel.setLayout(DoctorPanelLayout);
            DoctorPanelLayout.setHorizontalGroup(
                DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DoctorPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(DoctorPanelLayout.createSequentialGroup()
                            .addComponent(jLabel29)
                            .addGap(118, 118, 118))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorPanelLayout.createSequentialGroup()
                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(DoctorPanelLayout.createSequentialGroup()
                                    .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(DoctorPanelLayout.createSequentialGroup()
                                            .addGap(60, 60, 60)
                                            .addComponent(jLabel1))
                                        .addGroup(DoctorPanelLayout.createSequentialGroup()
                                            .addGap(40, 40, 40)
                                            .addComponent(doctor_id))
                                        .addGroup(DoctorPanelLayout.createSequentialGroup()
                                            .addGap(8, 8, 8)
                                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel28)
                                                .addComponent(jLabel4))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(doc_assistant_name_jTextField)
                                        .addComponent(doc_name_jTextField)
                                        .addComponent(doc_id_jTextField)
                                        .addComponent(doc_spec_jTextField)
                                        .addComponent(doc_contact_jTextField)
                                        .addComponent(doc_time_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(DoctorPanelLayout.createSequentialGroup()
                                    .addComponent(doc_submit_jButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(doc_update_jButton)
                                    .addGap(14, 14, 14)
                                    .addComponent(doc_del_jButton)))
                            .addGap(18, 18, 18)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(2433, Short.MAX_VALUE))
            );
            DoctorPanelLayout.setVerticalGroup(
                DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DoctorPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(DoctorPanelLayout.createSequentialGroup()
                            .addComponent(jLabel29)
                            .addGap(18, 18, 18)
                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(doctor_id)
                                .addComponent(doc_id_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(doc_name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(doc_assistant_name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(doc_spec_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(24, 24, 24)
                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(doc_contact_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28))
                            .addGap(21, 21, 21)
                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(doc_time_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(38, 38, 38)
                            .addGroup(DoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(doc_submit_jButton)
                                .addComponent(doc_update_jButton)
                                .addComponent(doc_del_jButton))))
                    .addContainerGap())
            );

            jTabbedPane.addTab("Doctor", DoctorPanel);

            OPDPanel.setPreferredSize(new java.awt.Dimension(100, 100));

            jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
            jLabel5.setText("Patient Entry");

            jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel7.setText("Name:");

            jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel9.setText("Blood Group:");

            jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel10.setText("Gender:");

            jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel11.setText("Contact No:");

            jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel12.setText("Emergency Person:");

            jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel13.setText("Emergency Contact no:");

            jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel14.setText("Medical Treatement:");

            jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel17.setText("Doctor Id:");

            pat_contact_jTextField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pat_contact_jTextFieldActionPerformed(evt);
                }
            });

            pat_emerg_contact_jTextField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pat_emerg_contact_jTextFieldActionPerformed(evt);
                }
            });

            pat_doc_id_jTextField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pat_doc_id_jTextFieldActionPerformed(evt);
                }
            });

            pat_gender_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male", "Rather not say" }));
            pat_gender_jComboBox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pat_gender_jComboBoxActionPerformed(evt);
                }
            });

            pat_submit_jButton.setText("SUBMIT");
            pat_submit_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pat_submit_jButtonActionPerformed(evt);
                }
            });

            pat_update_jButton.setText("UPDATE");
            pat_update_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pat_update_jButtonActionPerformed(evt);
                }
            });

            jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            jLabel6.setText("Patient no:");

            PatientTable.setModel(fetchPatTableData(PatientTable, true));
            getSelectedRow(PatientTable, patData, "patient");
            jScrollPane2.setViewportView(PatientTable);

            pat_del_jButton.setText("DELETE");
            pat_del_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pat_del_jButtonActionPerformed(evt);
                }
            });

            pat_emerg_person_jTextField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pat_emerg_person_jTextFieldActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout OPDPanelLayout = new javax.swing.GroupLayout(OPDPanel);
            OPDPanel.setLayout(OPDPanelLayout);
            OPDPanelLayout.setHorizontalGroup(
                OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(OPDPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(OPDPanelLayout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(pat_contact_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(OPDPanelLayout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pat_no_jTextField)
                                .addComponent(pat_name_jTextField)
                                .addComponent(pat_blood_group_jTextField)
                                .addComponent(pat_gender_jComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(OPDPanelLayout.createSequentialGroup()
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14)
                                .addComponent(jLabel17))
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(OPDPanelLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(pat_med_treatment_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(OPDPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(pat_emerg_person_jTextField)
                                        .addComponent(pat_emerg_contact_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OPDPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pat_doc_id_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(OPDPanelLayout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addComponent(pat_submit_jButton)
                            .addGap(18, 18, 18)
                            .addComponent(pat_update_jButton)
                            .addGap(18, 18, 18)
                            .addComponent(pat_del_jButton))
                        .addComponent(jLabel5))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );
            OPDPanelLayout.setVerticalGroup(
                OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(OPDPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(OPDPanelLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(pat_no_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(pat_name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(pat_blood_group_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(pat_gender_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(pat_contact_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(OPDPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pat_emerg_person_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(pat_emerg_contact_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pat_med_treatment_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel17)
                                .addComponent(pat_doc_id_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(OPDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pat_update_jButton)
                                .addComponent(pat_del_jButton)
                                .addComponent(pat_submit_jButton))))
                    .addGap(75, 75, 75))
            );

            jTabbedPane.addTab("Patient", OPDPanel);

            jScrollPane4.setViewportView(jTabbedPane);

            getContentPane().add(jScrollPane4);

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void pat_emerg_person_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_emerg_person_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pat_emerg_person_jTextFieldActionPerformed

    private void pat_submit_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_submit_jButtonActionPerformed
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {  // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement("INSERT INTO patient VALUES (?,?,?,?,?,?,?,?,?)");   // step 2: prepare a statement to push to DB

            stmt.setInt(1,Integer.parseInt(pat_no_jTextField.getText()));   // step 3: fetch data from the form and fill the prepared statement
            stmt.setString(2,pat_name_jTextField.getText());
           // stmt.setInt(3, Integer.parseInt(pat_dobjTextField.getText()));
            stmt.setString(3,pat_blood_group_jTextField.getText());
            stmt.setString(4,(String)pat_gender_jComboBox.getSelectedItem());
            stmt.setLong(5,Long.parseLong(pat_contact_jTextField.getText()));
            stmt.setString(6,pat_emerg_person_jTextField.getText());
            stmt.setLong(7,Long.parseLong(pat_emerg_contact_jTextField.getText()));
            stmt.setString(8,pat_med_treatment_jTextField.getText());
            stmt.setInt(9,Integer.parseInt(pat_doc_id_jTextField.getText()));
            //stmt.setDate(11,new Date(Date.parse(pat_adm_date_jTextField.getText())));
            //stmt.setDate(12,new Date(Date.parse(pat_discharge_date_jTextField.getText())));
            System.out.println(stmt.executeUpdate() + "records inserted."); // execute the statement. This will cause the data to be pushed.
            fetchPatTableData(PatientTable, false);
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Insertion Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("Insertion error: ");
            ex.printStackTrace();            
        }
    }//GEN-LAST:event_pat_submit_jButtonActionPerformed
    Vector<Object[]> patData = new Vector<>();
    public javax.swing.table.DefaultTableModel fetchPatTableData(javax.swing.JTable table, boolean init) {
        //Vector<Object[]> pat_data = new Vector<>();
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel)table.getModel();
        if(init)
            model = new javax.swing.table.DefaultTableModel(
                new String [] {
                    "Patient no", "Name", "Blood Group", "Gender", "Contact no", "Emergency Person", "Emergency Contact no", "Medical Treatment",  "Doctor Id"
                },0
            );
        patData.removeAll(patData);
        model.setRowCount(0);
        try {
            Dbconnect connect = new Dbconnect(dbname, username, password);
            ResultSet res = connect.getData("select * from patient");

            Object[] row; // stores row data
            System.out.println("Records from database: ");
            while (res.next()){ 
            // checks all the entries from the DB (will not enter while loop if no entries)
                int patient_id= res.getInt("patient_no");
                String Name = res.getString("Name");
                String Blood_group= res.getString("Blood_group");
                String Gender= res.getString("Gender");
                long Contact_no= res.getLong("Contact_no");
                String Emergency_person= res.getString("Emergency_person");
                long Emergency_contact_no= res.getLong("Emergency_contact_no");
                String Medical_treatment= res.getString("Medical_treatment");
                int Doctor_id = res.getInt("Doctor_id");
                System.out.printf("%s, %s, %s, %s, %s, %s, %s, %s, %s\n", patient_id,Name,Blood_group,Gender,Contact_no,Emergency_person,Emergency_contact_no,Medical_treatment,Doctor_id);
                row = new Object[] {patient_id,Name,Blood_group,Gender,Contact_no,Emergency_person,Emergency_contact_no,Medical_treatment,Doctor_id };
                patData.add(row);
                model.addRow(row);
            }
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Fetching Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("Fetching error: ");
            ex.printStackTrace();
        }
        
        return model;
    }  
    
    Vector<Object[]> OPDData = new Vector<>();
    public javax.swing.table.DefaultTableModel fetchOPDTableData(javax.swing.JTable table, boolean init) {
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel)table.getModel();
        if(init)
            model = new javax.swing.table.DefaultTableModel(
                new String [] {
                    "SHO", "Name", "Address", "Contact No", "Reason for registration", "Doctor Id", "Age", "Gender"
                },0
            );
        OPDData.removeAll(OPDData);
        model.setRowCount(0);
        try{
            Dbconnect connect = new Dbconnect(dbname, username, password);
            ResultSet res = connect.getData("select * from OPD");

            Object[] row; // stores row data
            System.out.println("Records from database: ");
            while (res.next()){ 
            // checks all the entries from the DB (will not enter while loop if no entries)
                String SHO = res.getString("SHO");
                String Name = res.getString("Name");
                String Address = res.getString("Address");
                long Contact_no= res.getLong("Contact_no");
                String Reason_for_registration= res.getString("Reason_for_registration");
                int Doctor_id = res.getInt("Doctor_id");
                int Age= res.getInt("Age");
                String Gender= res.getString("Gender");
                System.out.printf("%s, %s, %s, %s, %s, %s, %s, %s\n", SHO,Name,Address,Contact_no,Reason_for_registration,Doctor_id,Age,Gender);
                row = new Object[] {SHO,Name,Address,Contact_no,Reason_for_registration,Doctor_id,Age,Gender };
                OPDData.add(row);
                model.addRow(row);
            }
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Fetching Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("Fetching error: ");
            ex.printStackTrace();
        }
        return model;   
    }
    
    Vector<Object[]> docData = new Vector<>();
    public javax.swing.table.DefaultTableModel fetchDocTableData(javax.swing.JTable table, boolean init){
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel)table.getModel();
        if(init)
            model = new javax.swing.table.DefaultTableModel( new String [] {
                "Doctor id", "Name", "Assistant Name", "Specialisation", "Contact no", "Visiting Hours"
            },0
        );
        docData.removeAll(docData);
        model.setRowCount(0);
        try {
            Dbconnect connect = new Dbconnect(dbname, username, password);
            ResultSet res = connect.getData("select * from doctors");
            Object[] row; // stores row data
            System.out.println("Records from database: ");
            while (res.next()){ 
            // checks all the entries from the DB (will not enter while loop if no entries)
                int Doctor_id= res.getInt("Doctor_id");
                String Name = res.getString("Name");
                String Assistant_name = res.getString("Assistant_name");
                String Specialisation= res.getString("Specialisation");
                long Contact_no= res.getLong("Contact_no");
                String Visiting_hours= res.getString("Visiting_hours");
                System.out.printf("Doctor_id : %s\nName: %s\nAssistant_name : %s\nSpecialisation : %s\nContact_no : %s\nVisiting_hours : %s\n",Doctor_id,Name,Assistant_name,Specialisation,Contact_no,Visiting_hours );
                row = new Object[] {Doctor_id, Name, Assistant_name, Specialisation, Contact_no, Visiting_hours};
                model.addRow(row);
                docData.add(row);
            }
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Fetching Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("Fetching error: ");
            ex.printStackTrace();
        }
        return model;

    }
    private void pat_gender_jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_gender_jComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pat_gender_jComboBoxActionPerformed

    private void pat_doc_id_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_doc_id_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pat_doc_id_jTextFieldActionPerformed

    private void pat_emerg_contact_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_emerg_contact_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pat_emerg_contact_jTextFieldActionPerformed

    private void pat_contact_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_contact_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pat_contact_jTextFieldActionPerformed
    public void getSelectedRow(javax.swing.JTable table, Vector<Object[]> data, String tab) {
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent event) {
                // do some actions here, for example
                // print first column value from selected row
                if(table.getSelectedRow() >= 0)
                    switch(tab) {
                        case "patient": setPatientFormData(data.get(table.getSelectedRow()));
                        break;
                        case "doctor": setDoctorFormData(data.get(table.getSelectedRow()));
                        break;
                        case "OPD": setOPDFormData(data.get(table.getSelectedRow()));
                        break;
                    }
            }
        });
    }
    public void setOPDFormData(Object[] data){
        opd_sho_jTextField.setText((String)data[0]);
        opd_name_jTextField.setText((String)data[1]);
        opd_address_jTextField.setText((String)data[2]);
        opd_contact_jTextField.setText(((Long)data[3]).toString());
        opd_reason_regis_jTextField.setText((String)data[4]);
        opd_doc_id_jTextField.setText(((Integer)data[5]).toString());
        opd_age_jTextField.setText(((Integer)data[6]).toString());
        opd_gender_jComboBox.setSelectedItem((String)data[7]);
        
    }
    public void setDoctorFormData(Object[] data){
        doc_id_jTextField.setText(((Integer)data[0]).toString());
        doc_name_jTextField.setText((String)data[1]);
        doc_assistant_name_jTextField.setText((String)data[2]);
        doc_spec_jTextField.setText((String)data[3]);
        doc_contact_jTextField.setText(((Long)data[4]).toString());
        doc_time_jComboBox.setSelectedItem((String)data[5]);
    }
    public void setPatientFormData(Object[] data){
        pat_no_jTextField.setText(((Integer)data[0]).toString());
        pat_name_jTextField.setText((String)data[1]);
        pat_blood_group_jTextField.setText((String)data[2]);
        pat_gender_jComboBox.setSelectedItem((String)data[3]);
        pat_contact_jTextField.setText(((Long)data[4]).toString());
        pat_emerg_person_jTextField.setText((String)data[5]);
        pat_emerg_contact_jTextField.setText(((Long)data[6]).toString());
        pat_med_treatment_jTextField.setText((String)data[7]);
        pat_doc_id_jTextField.setText(((Integer)data[8]).toString());
    
    }
    private void pat_update_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_update_jButtonActionPerformed
                                                           
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {  // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement(
                    "UPDATE `patient` SET `Name`=?,`Blood_group`=?,`Gender`=?,`Contact_no`=?,`Emergency_person`=?,`Emergency_contact_no`=?,`Medical_treatment`=?,`Doctor_id`=? WHERE `Patient_no`=?");   // step 2: prepare a statement to push to DB

            // step 3: fetch data from the form and fill the prepared statement
            stmt.setString(1,pat_name_jTextField.getText());
            stmt.setString(2,pat_blood_group_jTextField.getText());
            stmt.setString(3,(String)pat_gender_jComboBox.getSelectedItem());
            stmt.setLong(4,Long.parseLong(pat_contact_jTextField.getText()));
            stmt.setString(5,pat_emerg_person_jTextField.getText());
            stmt.setLong(6,Long.parseLong(pat_emerg_contact_jTextField.getText()));
            stmt.setString(7,pat_med_treatment_jTextField.getText());
            stmt.setInt(8,Integer.parseInt(pat_doc_id_jTextField.getText()));
            stmt.setInt(9,Integer.parseInt(pat_no_jTextField.getText()));
            System.out.println(stmt.executeUpdate() + "records updated."); // execute the statement. This will cause the data to be pushed.
            fetchPatTableData(PatientTable, false);
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Updating Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("Updating error: ");
            ex.printStackTrace();            
        }
    
    }//GEN-LAST:event_pat_update_jButtonActionPerformed

    private void pat_del_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_del_jButtonActionPerformed
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {   // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement("DELETE FROM `patient` WHERE `Patient_no`=?");  // step 2: prepare a statement to push to DB
            
            stmt.setInt(1 , Integer.parseInt(pat_no_jTextField.getText()));// step 3: fetch data from the form and fill the prepared statement
            System.out.println(stmt.executeUpdate() + "records deleted."); // execute the statement. This will cause the data to be pushed.
            fetchPatTableData(PatientTable, false);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "deleting Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("deleting error: ");
            ex.printStackTrace();
        }        
   
    }//GEN-LAST:event_pat_del_jButtonActionPerformed

    private void doc_update_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_update_jButtonActionPerformed
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {   // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement("UPDATE `doctors` SET `Name`=?,`Assistant_name`=?,`Specialisation`=?,`Contact_no`=?,`Visiting_hours`=? WHERE `Doctor_id`=?");   // step 2: prepare a statement to push to DB

            // step 3: fetch data from the form and fill the prepared statement
            stmt.setString(1,doc_name_jTextField.getText());
            stmt.setString(2,doc_assistant_name_jTextField.getText());
            stmt.setString(3,doc_spec_jTextField.getText());
            stmt.setLong(4, Long.parseLong(doc_contact_jTextField.getText()));
            stmt.setString(5,(String)doc_time_jComboBox.getSelectedItem());
            stmt.setInt(6,Integer.parseInt(doc_id_jTextField.getText()));
            System.out.println(stmt.executeUpdate() + "records updated."); // execute the statement. This will cause the data to be pushed.
            fetchDocTableData(DoctorTable, false);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "updating Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("updating error: ");
            ex.printStackTrace();
        }

    }//GEN-LAST:event_doc_update_jButtonActionPerformed

    private void doc_del_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_del_jButtonActionPerformed
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {   // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement("DELETE FROM `doctors` WHERE `doctor_id`=?");  // step 2: prepare a statement to push to DB

            stmt.setInt(1 , Integer.parseInt(doc_id_jTextField.getText()));// step 3: fetch data from the form and fill the prepared statement
            System.out.println(stmt.executeUpdate() + "records deleted."); // execute the statement. This will cause the data to be pushed.
            fetchDocTableData(DoctorTable, false);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "deleting Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("deleting error: ");
            ex.printStackTrace();
        }

    }//GEN-LAST:event_doc_del_jButtonActionPerformed

    private void doc_submit_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_submit_jButtonActionPerformed
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {   // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement("INSERT INTO doctors VALUES (?,?,?,?,?,?)");   // step 2: prepare a statement to push to DB

            stmt.setInt(1,Integer.parseInt(doc_id_jTextField.getText()));   // step 3: fetch data from the form and fill the prepared statement
            stmt.setString(2,doc_name_jTextField.getText());
            stmt.setString(3,doc_assistant_name_jTextField.getText());
            stmt.setString(4,doc_spec_jTextField.getText());
            stmt.setLong(5, Long.parseLong(doc_contact_jTextField.getText()));
            stmt.setString(6,(String)doc_time_jComboBox.getSelectedItem());
            System.out.println(stmt.executeUpdate() + "records inserted."); // execute the statement. This will cause the data to be pushed.
            fetchDocTableData(DoctorTable, false);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Insertion Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("Insertion error: ");
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_doc_submit_jButtonActionPerformed

    private void doc_time_jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_time_jComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doc_time_jComboBoxActionPerformed

    private void doc_spec_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_spec_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doc_spec_jTextFieldActionPerformed

    private void doc_id_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_id_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doc_id_jTextFieldActionPerformed

    private void opd_update_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opd_update_jButtonActionPerformed
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {   // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement("UPDATE `opd` SET `Name`=?,`Address`=?,`Contact_no`=?,`Reason_for_registration`=?,`Doctor_id`=?,`Age`=?,`Gender`=? WHERE `SHO`=?");   // step 2: prepare a statement to push to DB

            // step 3: fetch data from the form and fill the prepared statement
            stmt.setString(1,opd_name_jTextField.getText());
            stmt.setString(2,opd_address_jTextField.getText());
            stmt.setLong(3,Long.parseLong(opd_contact_jTextField.getText()));
            stmt.setString(4,opd_reason_regis_jTextField.getText());
            stmt.setInt(5, Integer.parseInt(opd_doc_id_jTextField.getText()));
            stmt.setInt(6,Integer.parseInt(opd_age_jTextField.getText()));
            stmt.setString(7,(String)opd_gender_jComboBox.getSelectedItem());
            stmt.setString(8 ,opd_sho_jTextField.getText());
            System.out.println(stmt.executeUpdate() + "records updated."); // execute the statement. This will cause the data to be pushed.
            fetchOPDTableData(OPDTable, false);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "updating Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("updating error: ");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_opd_update_jButtonActionPerformed

    private void opd_del_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opd_del_jButtonActionPerformed
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {   // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement("DELETE FROM `opd` WHERE `SHO`=?");  // step 2: prepare a statement to push to DB

            stmt.setInt(1 , Integer.parseInt(opd_sho_jTextField.getText()));// step 3: fetch data from the form and fill the prepared statement
            System.out.println(stmt.executeUpdate() + "records deleted."); // execute the statement. This will cause the data to be pushed.
            fetchOPDTableData(OPDTable, false);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "deleting Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("deleting error: ");
            ex.printStackTrace();
        }

    }//GEN-LAST:event_opd_del_jButtonActionPerformed

    private void opd_submit_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opd_submit_jButtonActionPerformed
        Dbconnect connect = new Dbconnect(dbname, username, password);
        try(Connection conn = connect.getConnection()) {   // step 1: get connected to database
            PreparedStatement stmt = conn.prepareStatement("INSERT INTO opd VALUES (?,?,?,?,?,?,?,?)");   // step 2: prepare a statement to push to DB

            stmt.setString(1,opd_sho_jTextField.getText());   // step 3: fetch data from the form and fill the prepared statement
            stmt.setString(2,opd_name_jTextField.getText());
            stmt.setString(3,opd_address_jTextField.getText());
            stmt.setLong(4,Long.parseLong(opd_contact_jTextField.getText()));
            stmt.setString(5,opd_reason_regis_jTextField.getText());
            stmt.setInt(6, Integer.parseInt(opd_doc_id_jTextField.getText()));
            stmt.setInt(7,Integer.parseInt(opd_age_jTextField.getText()));
            stmt.setString(8,(String)opd_gender_jComboBox.getSelectedItem());
            System.out.println(stmt.executeUpdate() + "records inserted."); // execute the statement. This will cause the data to be pushed.
            fetchOPDTableData(OPDTable, false);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "Insertion Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println("Insertion error: ");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_opd_submit_jButtonActionPerformed

    private void opd_doc_id_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opd_doc_id_jTextFieldActionPerformed

    }//GEN-LAST:event_opd_doc_id_jTextFieldActionPerformed

    private void opd_contact_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opd_contact_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opd_contact_jTextFieldActionPerformed

    private void opd_name_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opd_name_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opd_name_jTextFieldActionPerformed

    private void opd_sho_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opd_sho_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opd_sho_jTextFieldActionPerformed
                                           
    
                                                

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DoctorPanel;
    private javax.swing.JTable DoctorTable;
    private javax.swing.JPanel OPDPanel;
    private javax.swing.JTable OPDTable;
    private javax.swing.JPanel PatientPanel;
    private javax.swing.JTable PatientTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField doc_assistant_name_jTextField;
    private javax.swing.JTextField doc_contact_jTextField;
    private javax.swing.JButton doc_del_jButton;
    private javax.swing.JTextField doc_id_jTextField;
    private javax.swing.JTextField doc_name_jTextField;
    private javax.swing.JTextField doc_spec_jTextField;
    private javax.swing.JButton doc_submit_jButton;
    private javax.swing.JComboBox<String> doc_time_jComboBox;
    private javax.swing.JButton doc_update_jButton;
    private javax.swing.JLabel doctor_id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField opd_address_jTextField;
    private javax.swing.JTextField opd_age_jTextField;
    private javax.swing.JTextField opd_contact_jTextField;
    private javax.swing.JButton opd_del_jButton;
    private javax.swing.JTextField opd_doc_id_jTextField;
    private javax.swing.JComboBox<String> opd_gender_jComboBox;
    private javax.swing.JTextField opd_name_jTextField;
    private javax.swing.JTextField opd_reason_regis_jTextField;
    private javax.swing.JTextField opd_sho_jTextField;
    private javax.swing.JButton opd_submit_jButton;
    private javax.swing.JButton opd_update_jButton;
    private javax.swing.JTextField pat_blood_group_jTextField;
    private javax.swing.JTextField pat_contact_jTextField;
    private javax.swing.JButton pat_del_jButton;
    private javax.swing.JTextField pat_doc_id_jTextField;
    private javax.swing.JTextField pat_emerg_contact_jTextField;
    private javax.swing.JTextField pat_emerg_person_jTextField;
    private javax.swing.JComboBox<String> pat_gender_jComboBox;
    private javax.swing.JTextField pat_med_treatment_jTextField;
    private javax.swing.JTextField pat_name_jTextField;
    private javax.swing.JTextField pat_no_jTextField;
    private javax.swing.JButton pat_submit_jButton;
    private javax.swing.JButton pat_update_jButton;
    // End of variables declaration//GEN-END:variables
}
